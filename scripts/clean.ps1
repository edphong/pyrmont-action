#Requires -Version 5.1
<#
.SYNOPSIS
  Deletes the entire code export directory ('./scripts/codeText') and recreates it empty.
.DESCRIPTION
  This script cleans up the output generated by the 'export.ps1' script. It forcefully
  removes the './scripts/codeText' directory and all its contents, then creates a new,
  empty './scripts/codeText' directory. This ensures a clean state before running
  the export script again.
.EXAMPLE
  .\scripts\clean.ps1
#>

# Define the root directory where exported text files are stored.
# This should match the $codeTextRoot variable in export.ps1
$codeTextRoot = ".\scripts\codeText"

Write-Host "------------------------------"
Write-Host "          CLEANING            "
Write-Host "------------------------------"
Write-Host "Target folder: $codeTextRoot"

# 1) If the target codeText folder exists, remove it (and everything inside).
#    -Recurse ensures subdirectories and files are deleted.
#    -Force overrides confirmation prompts and read-only attributes.
if (Test-Path -Path $codeTextRoot -PathType Container) {
    Write-Host "Removing existing '$codeTextRoot' folder..."
    Remove-Item -Path $codeTextRoot -Recurse -Force
    Write-Host "Successfully deleted '$codeTextRoot'."
} else {
    Write-Host "'$codeTextRoot' folder not found. No need to delete."
}

# 2) Recreate the directory so it's empty and ready for a new export.
Write-Host "Creating empty '$codeTextRoot' folder..."
New-Item -ItemType Directory -Path $codeTextRoot | Out-Null
Write-Host "Successfully created empty '$codeTextRoot'."

Write-Host "------------------------------"
Write-Host "       CLEAN COMPLETE         "
Write-Host "------------------------------"
Write-Host "TO CLEAN AGAIN: .\scripts\clean.ps1 "
Write-Host "TO EXPORT CODE: .\scripts\export.ps1"